@model WebApplication1.Models.LoginModel

@{
    ViewData["Title"] = "Login";
}

<h1>@ViewData["Title"]</h1>

<form id="loginForm" method="post">
    <div class="form-group">
        <label asp-for="UserName" class="control-label"></label>
        <input asp-for="UserName" class="form-control" id="userName" />
        <span asp-validation-for="UserName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Email" class="control-label"></label>
        <input asp-for="Email" class="form-control" id="email" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Password" class="control-label"></label>
        <input asp-for="Password" class="form-control" type="password" id="password" />
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="Login" class="btn btn-primary" />
    </div>
</form>

<script>
    const proxyUrl = 'https://cors-anywhere.herokuapp.com/';
    const targetUrl = 'https://web.socem.plymouth.ac.uk/COMP2001/auth/api/users';
    const url = proxyUrl + targetUrl;

    document.getElementById('loginForm').addEventListener('submit', async function (event) {
        event.preventDefault();

        const userName = document.getElementById('userName').value;
        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;

        try {
            const response = await fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ userName: userName, email: email, password: password })
            });

            if (response.ok) {
                const result = await response.json();
                if (result.length === 2 && result[1] === "True") {
                    window.location.href = '/';
                } else {
                    alert('Invalid login attempt.');
                }
            } else {
                const errorResponse = await response.text();
                console.error('Server responded with:', errorResponse);
                alert('An error occurred. Please try again.');
            }
        } catch (error) {
            console.error('Network error:', error);
            alert('Network error. Please try again.');
        }
    });

</script>
