#pragma checksum "C:\Users\firem\source\repos\WebApplication1\WebApplication1\Views\Login\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1d60bed9d10503df8b2623bdd0b2d9447c7ba9c9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Login_Index), @"mvc.1.0.view", @"/Views/Login/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1d60bed9d10503df8b2623bdd0b2d9447c7ba9c9", @"/Views/Login/Index.cshtml")]
    public class Views_Login_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<WebApplication1.Models.LoginModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\firem\source\repos\WebApplication1\WebApplication1\Views\Login\Index.cshtml"
  
    ViewData["Title"] = "Login";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<h1>");
#nullable restore
#line 7 "C:\Users\firem\source\repos\WebApplication1\WebApplication1\Views\Login\Index.cshtml"
Write(ViewData["Title"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h1>

<form id=""loginForm"" method=""post"">
    <div class=""form-group"">
        <label asp-for=""UserName"" class=""control-label""></label>
        <input asp-for=""UserName"" class=""form-control"" id=""userName"" />
        <span asp-validation-for=""UserName"" class=""text-danger""></span>
    </div>
    <div class=""form-group"">
        <label asp-for=""Email"" class=""control-label""></label>
        <input asp-for=""Email"" class=""form-control"" id=""email"" />
        <span asp-validation-for=""Email"" class=""text-danger""></span>
    </div>
    <div class=""form-group"">
        <label asp-for=""Password"" class=""control-label""></label>
        <input asp-for=""Password"" class=""form-control"" type=""password"" id=""password"" />
        <span asp-validation-for=""Password"" class=""text-danger""></span>
    </div>
    <div class=""form-group"">
        <input type=""submit"" value=""Login"" class=""btn btn-primary"" />
    </div>
</form>

<script>
    const proxyUrl = 'https://cors-anywhere.herokuapp.com/';
    const target");
            WriteLiteral(@"Url = 'https://web.socem.plymouth.ac.uk/COMP2001/auth/api/users';
    const url = proxyUrl + targetUrl;

    document.getElementById('loginForm').addEventListener('submit', async function (event) {
        event.preventDefault();

        const userName = document.getElementById('userName').value;
        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;

        try {
            const response = await fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ userName: userName, email: email, password: password })
            });

            if (response.ok) {
                const result = await response.json();
                if (result.length === 2 && result[1] === ""True"") {
                    window.location.href = '/';
                } else {
                    alert('Invalid log");
            WriteLiteral(@"in attempt.');
                }
            } else {
                const errorResponse = await response.text();
                console.error('Server responded with:', errorResponse);
                alert('An error occurred. Please try again.');
            }
        } catch (error) {
            console.error('Network error:', error);
            alert('Network error. Please try again.');
        }
    });

</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<WebApplication1.Models.LoginModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
